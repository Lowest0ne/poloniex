module Poloniex
  class OrderBook < BasePoloniex
    attr_reader :name, :asks, :bids, :raw
    # ["BTC_1CR", {"asks"=>[["0.00009700", 9.86493604], ["0.00009988", 44.508015], ["0.00009989", 167.12802896], ["0.00010000", 20], ["0.00010127", 1.6413971], ["0.00010128", 1.6413971], ["0.00010129", 1.2851559], ["0.00010130", 20], ["0.00010400", 1.3271866], ["0.00010401", 1.3271866], ["0.00010405", 4.2106265], ["0.00010406", 27.89673216], ["0.00010407", 9.98409856], ["0.00010410", 0.58117487], ["0.00010605", 0.96114977], ["0.00010606", 0.96114977], ["0.00010610", 3.0191027], ["0.00010611", 53.83967409], ["0.00010810", 0.93382166], ["0.00010811", 0.93382166], ["0.00010815", 2.933255], ["0.00010816", 330.00647977], ["0.00013849", 3.5], ["0.00013850", 7], ["0.00013851", 7], ["0.00013852", 3.5], ["0.00013854", 3.5], ["0.00013855", 3.5], ["0.00015090", 3.7946517], ["0.00015091", 3.7946517], ["0.00015099", 19.973134], ["0.00015100", 19.97313425], ["0.00015964", 2.2838998], ["0.00015965", 2.2838998], ["0.00015999", 4.179125], ["0.00016000", 4.179125], ["0.00016825", 0.65006808], ["0.00016826", 0.65006808], ["0.00016961", 0.76318593], ["0.00016962", 0.76318593], ["0.00016963", 0.92259773], ["0.00016964", 0.92259773], ["0.00016999", 4.179125], ["0.00017000", 4.179125], ["0.00017715", 1.6299128], ["0.00017716", 1.6299128], ["0.00017975", 0.56462336], ["0.00017976", 0.56462336], ["0.00017999", 23.325324], ["0.00018000", 23.32532361]], "bids"=>[["0.00009210", 1824.52154385], ["0.00009011", 4.5248063], ["0.00009010", 187.90233074], ["0.00009000", 111.11111111], ["0.00008751", 1.5939135], ["0.00008750", 22], ["0.00008610", 19.51567944], ["0.00008561", 1.2083212], ["0.00008560", 33.1682243], ["0.00008555", 288.47801684], ["0.00008532", 23.12781521], ["0.00008118", 3.0040054], ["0.00008117", 12.44302082], ["0.00008000", 125], ["0.00007005", 8.9944799], ["0.00007004", 8.9944799], ["0.00007001", 26.692446], ["0.00007000", 142.85714286], ["0.00006005", 10.155643], ["0.00006004", 10.155643], ["0.00006001", 31.554065], ["0.00006000", 167.5], ["0.00005005", 13.201118], ["0.00005004", 13.201118], ["0.00005001", 41.017782], ["0.00005000", 200], ["0.00004005", 18.149063], ["0.00004004", 18.149063], ["0.00004001", 56.394369], ["0.00004000", 250], ["0.00003005", 27.217549], ["0.00003004", 27.217549], ["0.00003001", 84.579136], ["0.00003000", 335], ["0.00002005", 47.610318], ["0.00002004", 47.610318], ["0.00002001", 147.9716], ["0.00002000", 500], ["0.00001005", 118.88325], ["0.00001004", 118.88325], ["0.00001001", 369.63605], ["0.00001000", 1000], ["0.00000016", 11785.499], ["0.00000015", 11785.499], ["0.00000014", 934.0624], ["0.00000013", 934.0624], ["0.00000012", 12181.818], ["0.00000011", 12181.81818182], ["0.00000010", 2905.9719], ["0.00000009", 2905.9719]], "isFrozen"=>"0"}]
    def initialize(attrs = {})
      @name = attrs.first
      @asks = attrs.last['asks']
      @bids = attrs.last['bids']
      @raw = attrs
    end

    def self.all(depth = 50)
      response = client.get('returnOrderBook', { currencyPair: 'all', depth: depth })
      response.map { |e| new(e) } if response.present?
    end

    def self.by_pair(pair, depth = 50)
      pair = normalize_pair(pair)
      response = client.get('returnOrderBook', { currencyPair: pair, depth: depth })
      new([pair, response]) if response.present? && !response['error']
    end
  end
end